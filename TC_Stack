package TestCasesTestNG;

import org.testng.Assert;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

import BaseClassTestNG.BaseClassTestNG;
import PageObjectTestNG.Array;
import PageObjectTestNG.DataStructure;
import PageObjectTestNG.GetStartedButton;
import PageObjectTestNG.HomePage;
import PageObjectTestNG.LinkedList;
import PageObjectTestNG.LoginPage;
import PageObjectTestNG.Stack;
import PageObjectTestNG.Tree;
import UtilitiesTestNG.Loggerclass;

public class TC_Stack extends BaseClassTestNG{
	
	GetStartedButton gsb;
	HomePage hp;
	LoginPage lp;
	Tree tp;
	DataStructure ds;
	Array ar;
	LinkedList ll;
	Stack st;
	String RegUserName = "khush2023";
	String RegPaswrd = "Hello@123";
	
	@BeforeClass
	 public void ObjDeclare() throws InterruptedException
	 {
		 gsb = new GetStartedButton(driver);
		 hp = new HomePage(driver);
		 lp = new LoginPage(driver);
		 tp = new Tree(driver);	
		 ds = new DataStructure(driver);
		 ar = new Array(driver);
		 ll = new LinkedList(driver);
		 st = new Stack(driver);
	 }
	
	public void User_Login() {
		hp.DsGetStarted();
		hp.CLickSignin();	 
	 	lp.typeUserName(RegUserName);
		lp.typePassword(RegPaswrd);
		lp.clickLogin();
		Assert.assertTrue(true);
		Loggerclass.info("User logged in successfully");
	}
	
	@Test(priority=1, description="Stack Page")
	 public void ClickStack() throws Exception {
		User_Login();
		st.ClickST();
		String actH = st.getheading();
		String expH = "Stack";
		if (actH.equals(expH)) {
			Assert.assertEquals (actH,expH);
			Loggerclass.info("You are on the Stack page");
			Assert.assertTrue(true);
		}
		else {
			Loggerclass.info("You are not on the Stack page");
			Assert.assertTrue(false);
		}
	}
	
	@Test(priority=2, description="Operations in Stack")
	 public void ClickOperInStack() throws Exception {
		st.OPSTClick();
		String actPara = st.getparagraphText();
		String expPara = "Operations in Stack";
		if (actPara.equals(expPara)) {
			Assert.assertEquals (actPara,expPara);
			Loggerclass.info("You are on Operations in Stack page");
			Assert.assertTrue(true);
		}
		else {
			Loggerclass.info("You are not on Operations in Stack page");
			Assert.assertTrue(false);
		}
		st.STClick();
		st.TEditor();
		Loggerclass.info("Operations in Stack page verified successfully");
		driver.navigate().back();
		driver.navigate().back();
	}
	
	@Test(priority=3, description="Implementation")
	 public void ClickImplementation() throws Exception {
		st.IMPClick();
		String actPara = st.getparagraphText();
		String expPara = "Implementation";
		if (actPara.equals(expPara)) {
			Assert.assertEquals (actPara,expPara);
			Loggerclass.info("You are on Implementation page");
			Assert.assertTrue(true);
		}
		else {
			Loggerclass.info("You are not on Implementation page");
			Assert.assertTrue(false);
		}
		st.STClick();
		st.TEditor();
		Loggerclass.info("Implementation page verified successfully");
		driver.navigate().back();
		driver.navigate().back();
	}
	
	@Test(priority=4, description="Applications")
	 public void ClickApplications() throws Exception {
		st.STAPPClick();
		String actPara = st.getparagraphText();
		String expPara = "Applications";
		if (actPara.equals(expPara)) {
			Assert.assertEquals (actPara,expPara);
			Loggerclass.info("You are on Applications page");
			Assert.assertTrue(true);
		}
		else {
			Loggerclass.info("You are not on Applications page");
			Assert.assertTrue(false);
		}
		st.STClick();
		st.TEditor();
		Loggerclass.info("Applications page verified successfully");
		driver.navigate().back();
		driver.navigate().back();
	}

}
