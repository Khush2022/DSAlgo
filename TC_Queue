package TestCasesTestNG;

import org.testng.Assert;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

import BaseClassTestNG.BaseClassTestNG;
import PageObjectTestNG.Array;
import PageObjectTestNG.DataStructure;
import PageObjectTestNG.GetStartedButton;
import PageObjectTestNG.HomePage;
import PageObjectTestNG.LinkedList;
import PageObjectTestNG.LoginPage;
import PageObjectTestNG.Queue;
import PageObjectTestNG.Stack;
import PageObjectTestNG.Tree;
import UtilitiesTestNG.Loggerclass;

public class TC_Queue extends BaseClassTestNG{
	
	GetStartedButton gsb;
	HomePage hp;
	LoginPage lp;
	Tree tp;
	DataStructure ds;
	Array ar;
	LinkedList ll;
	Stack st;
	Queue qu;
	String RegUserName = "khush2023";
	String RegPaswrd = "Hello@123";
	
	@BeforeClass
	 public void ObjDeclare() throws InterruptedException
	 {
		 gsb = new GetStartedButton(driver);
		 hp = new HomePage(driver);
		 lp = new LoginPage(driver);
		 tp = new Tree(driver);	
		 ds = new DataStructure(driver);
		 ar = new Array(driver);
		 ll = new LinkedList(driver);
		 st = new Stack(driver);
		 qu = new Queue(driver);
	 }
	
	public void User_Login() {
		hp.DsGetStarted();
		hp.CLickSignin();	 
	 	lp.typeUserName(RegUserName);
		lp.typePassword(RegPaswrd);
		lp.clickLogin();
		Assert.assertTrue(true);
		Loggerclass.info("User logged in successfully");
	}
	
	@Test(priority=1, description="Queue Page")
	 public void ClickQueue() throws Exception {
		User_Login();
		qu.ClickQUEUE();
		String actH = st.getheading();
		String expH = "Queue";
		if (actH.equals(expH)) {
			Assert.assertEquals (actH,expH);
			Loggerclass.info("You are on the Queue page");
			Assert.assertTrue(true);
		}
		else {
			Loggerclass.info("You are not on the Queue page");
			Assert.assertTrue(false);
		}
	}
	
	@Test(priority=2, description="Implementation of Queue in Python")
	 public void ClickImplementQueuePython() throws Exception {
		qu.IMPLSTClick();
		String actPara = qu.getparagraphText();
		String expPara = "Implementation of Queue in Python";
		if (actPara.equals(expPara)) {
			Assert.assertEquals (actPara,expPara);
			Loggerclass.info("You are on Implementation of Queue in Python page");
			Assert.assertTrue(true);
		}
		else {
			Loggerclass.info("You are not on Implementation of Queue in Python page");
			Assert.assertTrue(false);
		}
		qu.QUEUEClick();
		qu.TEditor();
		Loggerclass.info("Implementation of Queue in Python page verified successfully");
		driver.navigate().back();
		driver.navigate().back();
	}
	
	@Test(priority=2, description="Implementation using collections.deque")
	 public void ClickImplementCollectDeque() throws Exception {
		qu.IMPCOLLClick();
		String actPara = qu.getparagraphText();
		String expPara = "Implementation using collections.deque";
		if (actPara.equals(expPara)) {
			Assert.assertEquals (actPara,expPara);
			Loggerclass.info("You are on Implementation using collections.deque page");
			Assert.assertTrue(true);
		}
		else {
			Loggerclass.info("You are not on Implementation using collections.deque page");
			Assert.assertTrue(false);
		}
		qu.QUEUEClick();
		qu.TEditor();
		Loggerclass.info("Implementation using collections.deque page verified successfully");
		driver.navigate().back();
		driver.navigate().back();
	}
	
	@Test(priority=3, description="Implementation using array")
	 public void ClickImplementArray() throws Exception {
		qu.IMPARRClick();
		String actPara = qu.getparagraphText();
		String expPara = "Implementation using array";
		if (actPara.equals(expPara)) {
			Assert.assertEquals (actPara,expPara);
			Loggerclass.info("You are on Implementation using array page");
			Assert.assertTrue(true);
		}
		else {
			Loggerclass.info("You are not on Implementation using array page");
			Assert.assertTrue(false);
		}
		qu.QUEUEClick();
		qu.TEditor();
		Loggerclass.info("Implementation using array page verified successfully");
		driver.navigate().back();
		driver.navigate().back();
	}
	
	@Test(priority=4, description="Queue Operations")
	 public void ClickQueueOperation() throws Exception {
		qu.QUEOPClick();
		String actPara = qu.getparagraphText();
		String expPara = "Queue Operations";
		if (actPara.equals(expPara)) {
			Assert.assertEquals (actPara,expPara);
			Loggerclass.info("You are on Queue Operations page");
			Assert.assertTrue(true);
		}
		else {
			Loggerclass.info("You are not on Queue Operations page");
			Assert.assertTrue(false);
		}
		qu.QUEUEClick();
		qu.TEditor();
		Loggerclass.info("Queue Operations page verified successfully");
		driver.navigate().back();
		driver.navigate().back();
	}

}
